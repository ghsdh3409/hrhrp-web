<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                        http://www.springframework.org/schema/security
                        http://www.springframework.org/schema/security/spring-security-3.1.xsd">


    
	<security:http auto-config="true" use-expressions="true">	   
	    <security:intercept-url pattern="/login" access="permitAll" /> 
	    <security:intercept-url pattern="/register" access="permitAll" />
		<security:intercept-url pattern="/api/signup" access="permitAll" />
		<security:intercept-url pattern="/api/signin_fail" access="permitAll" />
		<security:intercept-url pattern="/api/unsigned" access="permitAll" />
		<security:intercept-url pattern="/api/exist_user" access="permitAll" />
		<security:intercept-url pattern="/api/init_pw" access="permitAll" />
	    <security:intercept-url pattern="/resources/**" access="permitAll" />
	    
		<security:intercept-url pattern="/**" access="hasRole('ROLE_USER')" />
		
		<security:form-login login-page="/login" 
					username-parameter="email_signin" 
					password-parameter="password_signin"	
					authentication-failure-handler-ref="authenticationFailureHandler" />
		<security:remember-me data-source-ref="dataSource" token-validity-seconds="864000" user-service-ref="jdbcUserService" />
	</security:http>
	
	<bean id="authenticationFailureHandler"
    class="org.springframework.security.web.authentication.ExceptionMappingAuthenticationFailureHandler">
	    <property name="exceptionMappings">
	        <props>
	            <prop key="org.springframework.security.authentication.BadCredentialsException">/login?error=badCredentials</prop>
	            <prop key="org.springframework.security.authentication.CredentialsExpiredException">/login?error=credentialsExpired</prop>
	            <prop key="org.springframework.security.authentication.LockedException">/login?error=accountLocked</prop>
	            <prop key="org.springframework.security.authentication.DisabledException">/login?error=accountDisabled</prop>
	        </props>
	    </property>
	</bean>
	
	<bean id="signinSuccessHandler" class="kr.ac.kaist.hrhrp.user.SigninSuccessHandler">
		 <property name="useReferer" value="true" />
	</bean>
		
	<security:authentication-manager alias="authenticationManager">
		<security:authentication-provider
			user-service-ref="jdbcUserService" />
	</security:authentication-manager>

	<security:authentication-manager>
		<security:authentication-provider>
			<security:password-encoder ref="passwordEncoder" />
			<security:jdbc-user-service
				data-source-ref="dataSource"

				users-by-username-query="
					select username,password, enabled 
					from users where USERNAME=?"

				authorities-by-username-query="
					select u.username, ur.authority from users u, user_roles ur 
					where u.user_id = ur.user_id and u.username =?  " />
		</security:authentication-provider>
	</security:authentication-manager>

	<bean id="passwordEncoder"
		class="org.springframework.security.authentication.encoding.ShaPasswordEncoder" />

	<bean id="jdbcUserService" class="kr.ac.kaist.hrhrp.security.CustomJdbcUserDetailsManager">
		<property name="dataSource" ref="dataSource" />
		<property name="authenticationManager" ref="authenticationManager" />
	</bean>
</beans>